{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///esri-leaflet-query-run-async.js","webpack:///webpack/bootstrap 8596b2547908b664fd93","webpack:///./src/index.js","webpack:///./src/defer-factory.js","webpack:///./src/methods.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","makeQueryRunAsyncFactory","_ref","defaultDeferFactory","runAsync","cancel","esriLeafletQuery","_ref2","arguments","length","undefined","promiseFactory","extendedMethods","bind","prototype","_ref3","reason","Object","defineProperty","value","_deferFactory","_methods","makeQueryRunAsync","deferFactory","Promise","default","defer","extendDefer","resolve","reject","promise","context","queryPromise","httpQueryRequest","run","e","collection","res","data","response","catch","abort"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,gCAAAD,IAEAD,EAAA,gCAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAP,WACAS,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,QAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAAUL,EAAQD,EAASM,GAEhC,YErDD,SAASS,GAATC,GAA6E,GAAzCC,GAAyCD,EAAzCC,oBAAqBC,EAAoBF,EAApBE,SAAUC,EAAUH,EAAVG,MAC/D,OAAO,UAA2BC,GAA2C,GAAAC,GAAAC,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,MAAvBG,EAAuBJ,EAAvBI,eAC5CC,GACFR,SAAUA,EAASS,KAAKP,EAAiBQ,WACpCH,eAAgBA,GAAkBR,EAClCG,qBAELD,SAEJC,GAAiBQ,UAAUV,SAAW,WAAc,MAAOQ,GAAgBR,SAASd,OACpFgB,EAAiBQ,UAAUT,OAAS,WAA0B,GAAAU,GAAAP,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,MAAfQ,EAAeD,EAAfC,MAC3C,OAAOJ,GAAgBP,OAAOR,KAAKP,MAAQ0B,aF4CtDC,OAAOC,eAAehC,EAAS,cAC3BiC,OAAO,GE3DZ,IAAAC,GAAA5B,EAAA,GACA6B,EAAA7B,EAAA,GAiBM8B,EAAoBrB,GAA0BE,qBAAqB,EAAAiB,EAAAG,cAAoBC,SAAUpB,oBAAUC,iBF4EhHnB,GAAQuC,QE3EMH,GF+ET,SAAUnC,EAAQD,GAEvB,YAEA+B,QAAOC,eAAehC,EAAS,cAC3BiC,OAAO,GGvGCI,gBAAe,SAACC,GAAD,MAAa,YACrC,GAAME,MACAC,EAAc,SAACD,GAAD,MAAW,UAACE,EAASC,GAAYH,EAAME,QAAUA,EAASF,EAAMG,OAASA,GAG7F,OAFAH,GAAMI,QAAU,GAAIN,GAAQG,EAAYD,IAEjCA,KHoHL,SAAUvC,EAAQD,GAEvB,YI3HM,SAASkB,GAATF,EAAwD6B,GAAS,GAA7CpB,GAA6CT,EAA7CS,eAAgBL,EAA6BJ,EAA7BI,iBACjC0B,EAAerB,GACrBrB,MAAK0C,aAAeA,CACpB,IAAMC,GAAmB3B,EAAiBQ,UAAUoB,IAAIrC,KAAKkC,EAC7D,SAACI,EAAGC,EAAYC,GAAhB,MAAwBL,GAAaJ,SAAUO,IAAGG,KAAMF,EAAYG,SAAUF,KAQ9E,OANAL,GAAaF,QAAQU,MAAM,SAACL,GAGxB,MAFAF,GAAiBQ,QAEVN,IAGJH,EAAaF,QAGjB,QAASzB,GAATE,GAA4B,GAAVS,GAAUT,EAAVS,MACrB,OAAO1B,MAAK0C,aAAaH,QAASb,yBAAyBA,EAAQ,KAAOA,EAAS,MJ6GtFC,OAAOC,eAAehC,EAAS,cAC3BiC,OAAO,IAEXjC,EIhIekB,WJiIflB,EIlHemB","file":"esri-leaflet-query-run-async.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"esri-leaflet-query-run-async\"] = factory();\n\telse\n\t\troot[\"esri-leaflet-query-run-async\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"esri-leaflet-query-run-async\"] = factory();\n\telse\n\t\troot[\"esri-leaflet-query-run-async\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _deferFactory = __webpack_require__(1);\n\t\n\tvar _methods = __webpack_require__(2);\n\t\n\tfunction makeQueryRunAsyncFactory(_ref) {\n\t    var defaultDeferFactory = _ref.defaultDeferFactory,\n\t        runAsync = _ref.runAsync,\n\t        cancel = _ref.cancel;\n\t\n\t    return function makeQueryRunAsync(esriLeafletQuery) {\n\t        var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t            promiseFactory = _ref2.promiseFactory;\n\t\n\t        var extendedMethods = {\n\t            runAsync: runAsync.bind(esriLeafletQuery.prototype, {\n\t                promiseFactory: promiseFactory || defaultDeferFactory,\n\t                esriLeafletQuery: esriLeafletQuery\n\t            }),\n\t            cancel: cancel\n\t        };\n\t        esriLeafletQuery.prototype.runAsync = function () {\n\t            return extendedMethods.runAsync(this);\n\t        };\n\t        esriLeafletQuery.prototype.cancel = function () {\n\t            var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n\t                reason = _ref3.reason;\n\t\n\t            return extendedMethods.cancel.call(this, { reason: reason });\n\t        };\n\t    };\n\t}\n\tvar makeQueryRunAsync = makeQueryRunAsyncFactory({ defaultDeferFactory: (0, _deferFactory.deferFactory)(Promise), runAsync: _methods.runAsync, cancel: _methods.cancel });\n\texports.default = makeQueryRunAsync;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\tvar deferFactory = exports.deferFactory = function deferFactory(Promise) {\n\t    return function () {\n\t        var defer = {};\n\t        var extendDefer = function extendDefer(defer) {\n\t            return function (resolve, reject) {\n\t                defer.resolve = resolve;defer.reject = reject;\n\t            };\n\t        };\n\t        defer.promise = new Promise(extendDefer(defer));\n\t\n\t        return defer;\n\t    };\n\t};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.runAsync = runAsync;\n\texports.cancel = cancel;\n\tfunction runAsync(_ref, context) {\n\t    var promiseFactory = _ref.promiseFactory,\n\t        esriLeafletQuery = _ref.esriLeafletQuery;\n\t\n\t    var queryPromise = promiseFactory();\n\t    this.queryPromise = queryPromise;\n\t    var httpQueryRequest = esriLeafletQuery.prototype.run.call(context, function (e, collection, res) {\n\t        return queryPromise.resolve({ e: e, data: collection, response: res });\n\t    });\n\t\n\t    queryPromise.promise.catch(function (e) {\n\t        httpQueryRequest.abort();\n\t\n\t        return e;\n\t    });\n\t\n\t    return queryPromise.promise;\n\t}\n\t\n\tfunction cancel(_ref2) {\n\t    var reason = _ref2.reason;\n\t\n\t    return this.queryPromise.reject({ reason: \"CANCEL_REQUEST\" + (reason ? \": \" + reason : \"\") });\n\t}\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// esri-leaflet-query-run-async.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8596b2547908b664fd93","import { deferFactory as defaultDeferFactory } from \"./defer-factory.js\";\r\nimport { runAsync, cancel } from \"./methods.js\";\r\n\r\nfunction makeQueryRunAsyncFactory({ defaultDeferFactory, runAsync, cancel }) {\r\n    return function makeQueryRunAsync(esriLeafletQuery, { promiseFactory } = {}) {\r\n        const extendedMethods = {\r\n            runAsync: runAsync.bind(esriLeafletQuery.prototype, {\r\n                 promiseFactory: promiseFactory || defaultDeferFactory,\r\n                 esriLeafletQuery\r\n            }),\r\n            cancel\r\n        };\r\n        esriLeafletQuery.prototype.runAsync = function () { return extendedMethods.runAsync(this); };\r\n        esriLeafletQuery.prototype.cancel = function({ reason } = {}) {\r\n            return extendedMethods.cancel.call(this, { reason });\r\n        };\r\n    }\r\n}\r\nconst makeQueryRunAsync = makeQueryRunAsyncFactory({defaultDeferFactory: defaultDeferFactory(Promise), runAsync, cancel});\r\nexport default makeQueryRunAsync;\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","export const deferFactory = (Promise) => () => {\r\n    const defer = {};\r\n    const extendDefer = (defer) => (resolve, reject) => {defer.resolve = resolve; defer.reject = reject};\r\n    defer.promise = new Promise(extendDefer(defer));\r\n\r\n    return defer;\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/defer-factory.js","export function runAsync({ promiseFactory, esriLeafletQuery }, context) {\r\n    const queryPromise = promiseFactory();\r\n    this.queryPromise = queryPromise;\r\n    const httpQueryRequest = esriLeafletQuery.prototype.run.call(context,\r\n    (e, collection, res) => queryPromise.resolve({ e, data: collection, response: res }));\r\n\r\n    queryPromise.promise.catch((e) => {\r\n        httpQueryRequest.abort();\r\n\r\n        return e;\r\n    });\r\n\r\n    return queryPromise.promise;\r\n}\r\n\r\nexport function cancel({ reason }) {\r\n    return this.queryPromise.reject({ reason: `CANCEL_REQUEST${reason? \": \" + reason : \"\"}` });\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/methods.js"],"sourceRoot":""}